/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PosPanels;

import java.awt.Graphics;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import pos.User;
import DAOs.UsersDB;
import java.io.File;

/**
 *
 * @author Omer
 */
public class UserMgmtP extends javax.swing.JPanel {

    /**
     * Creates new form UserMgmt
     * @param m
     */
    public UserMgmtP(MainFrame m) {
        mainframe=m;
        initComponents();
        initComponents2();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        numOfUsers = new javax.swing.JLabel();
        lookUpUsers = new javax.swing.JLabel();
        lookUpUsername = new javax.swing.JLabel();
        lookUpDepartment = new javax.swing.JLabel();
        searchUsername = new javax.swing.JTextField();
        searchID = new javax.swing.JTextField();
        findUser = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        numOfUsersT = new javax.swing.JTextField();
        searchDepartment1 = new java.awt.Choice();
        lookUpUsers1 = new javax.swing.JLabel();
        editUserIdL = new javax.swing.JLabel();
        newUserInfoL = new javax.swing.JLabel();
        EUserId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        newUsername = new javax.swing.JTextField();
        newID = new javax.swing.JTextField();
        updateRec = new javax.swing.JButton();
        delRec = new javax.swing.JButton();
        eFindUser = new javax.swing.JButton();
        UserFoundT = new javax.swing.JTextField();
        updateDoneT = new javax.swing.JTextField();
        newUserInfoL1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        newUserUsername = new javax.swing.JTextField();
        addNewUser = new javax.swing.JButton();
        addSucc = new javax.swing.JTextField();
        newUserPass = new javax.swing.JPasswordField();
        jLabel8 = new javax.swing.JLabel();
        viewAll = new javax.swing.JButton();
        logoutB = new javax.swing.JButton();
        backB = new javax.swing.JButton();
        clearLookup = new javax.swing.JButton();
        clearUserSearch = new javax.swing.JButton();
        newUserDept = new java.awt.Choice();
        newDept = new java.awt.Choice();
        ActivateB = new javax.swing.JButton();
        newUserPass1 = new javax.swing.JPasswordField();
        jLabel9 = new javax.swing.JLabel();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setMinimumSize(new java.awt.Dimension(1000, 600));
        setPreferredSize(new java.awt.Dimension(1000, 600));

        numOfUsers.setBackground(new java.awt.Color(255, 255, 255));
        numOfUsers.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        numOfUsers.setText("Number of current users:");

        lookUpUsers.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lookUpUsers.setText("Look up users:");

        lookUpUsername.setText("Username:");

        lookUpDepartment.setText("Department:");

        searchUsername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchUsernameKeyReleased(evt);
            }
        });

        searchID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchIDKeyReleased(evt);
            }
        });

        findUser.setText("Find");
        findUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findUserActionPerformed(evt);
            }
        });

        resultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "#", "Username", "Department", "ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        resultTable.setCellSelectionEnabled(true);
        resultTable.setEditingColumn(2);
        resultTable.setEnabled(false);
        resultTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(resultTable);
        resultTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (resultTable.getColumnModel().getColumnCount() > 0) {
            resultTable.getColumnModel().getColumn(0).setPreferredWidth(35);
            resultTable.getColumnModel().getColumn(1).setResizable(false);
            resultTable.getColumnModel().getColumn(2).setResizable(false);
            resultTable.getColumnModel().getColumn(3).setPreferredWidth(100);
        }

        jLabel1.setText("ID:");

        numOfUsersT.setEditable(false);

        searchDepartment1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchDepartment1KeyReleased(evt);
            }
        });

        lookUpUsers1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lookUpUsers1.setText("Edit users:");

        editUserIdL.setText("User ID:");

        newUserInfoL.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        newUserInfoL.setText("User Information");

        EUserId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                EUserIdKeyReleased(evt);
            }
        });

        jLabel2.setText("New username:");

        jLabel3.setText("New Dept.:");

        jLabel4.setText("New ID number:");

        newUsername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                newUsernameKeyReleased(evt);
            }
        });

        newID.setEditable(false);

        updateRec.setText("Update");
        updateRec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateRecActionPerformed(evt);
            }
        });

        delRec.setText("Deactivate");
        delRec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delRecActionPerformed(evt);
            }
        });

        eFindUser.setText("Find");
        eFindUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eFindUserActionPerformed(evt);
            }
        });

        UserFoundT.setEditable(false);
        UserFoundT.setBackground(new java.awt.Color(255, 255, 255));
        UserFoundT.setBorder(null);

        updateDoneT.setEditable(false);
        updateDoneT.setBackground(new java.awt.Color(255, 255, 255));
        updateDoneT.setBorder(null);

        newUserInfoL1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        newUserInfoL1.setText("Add New User");

        jLabel5.setText("Username:");

        jLabel6.setText("Dept.:");

        newUserUsername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                newUserUsernameKeyReleased(evt);
            }
        });

        addNewUser.setText("Add");
        addNewUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewUserActionPerformed(evt);
            }
        });

        addSucc.setEditable(false);
        addSucc.setBackground(new java.awt.Color(255, 255, 255));
        addSucc.setBorder(null);

        newUserPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                newUserPassKeyReleased(evt);
            }
        });

        jLabel8.setText("Password:");

        viewAll.setText("View all");
        viewAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAllActionPerformed(evt);
            }
        });

        logoutB.setText("Logout");
        logoutB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBActionPerformed(evt);
            }
        });

        backB.setText("Back");
        backB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBActionPerformed(evt);
            }
        });

        clearLookup.setText("Clear");
        clearLookup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearLookupActionPerformed(evt);
            }
        });

        clearUserSearch.setText("Clear");
        clearUserSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearUserSearchActionPerformed(evt);
            }
        });

        newDept.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                newDeptKeyReleased(evt);
            }
        });

        ActivateB.setText("Activate");
        ActivateB.setEnabled(false);
        ActivateB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActivateBActionPerformed(evt);
            }
        });

        newUserPass1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                newUserPass1KeyReleased(evt);
            }
        });

        jLabel9.setText("Confirm PW:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lookUpUsers)
                        .addGap(55, 55, 55)
                        .addComponent(numOfUsers)
                        .addGap(18, 18, 18)
                        .addComponent(numOfUsersT, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(142, 142, 142)
                        .addComponent(lookUpUsers1)
                        .addGap(0, 377, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(34, 34, 34)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel2))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(newUserInfoL1, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel8)
                                                .addComponent(jLabel9)
                                                .addComponent(jLabel6)
                                                .addComponent(jLabel5))))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(editUserIdL)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(addSucc)
                                    .addComponent(newUserPass)
                                    .addComponent(newID)
                                    .addComponent(updateDoneT)
                                    .addComponent(newUsername)
                                    .addComponent(newUserUsername)
                                    .addComponent(newUserDept, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(newDept, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(newUserPass1))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(delRec, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(addNewUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(updateRec, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ActivateB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(UserFoundT, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(clearUserSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(EUserId, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(eFindUser, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 75, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lookUpDepartment)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(searchID, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                                    .addComponent(searchDepartment1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lookUpUsername)
                                .addGap(18, 18, 18)
                                .addComponent(searchUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(findUser, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                                    .addComponent(viewAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(clearLookup, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(90, 90, 90)
                        .addComponent(newUserInfoL, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backB, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(logoutB, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backB)
                    .addComponent(logoutB))
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(numOfUsers)
                        .addComponent(numOfUsersT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lookUpUsers)
                        .addComponent(lookUpUsers1)))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lookUpUsername)
                    .addComponent(editUserIdL)
                    .addComponent(EUserId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eFindUser)
                    .addComponent(findUser))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lookUpDepartment)
                        .addComponent(UserFoundT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(viewAll)
                        .addComponent(clearUserSearch))
                    .addComponent(searchDepartment1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(clearLookup)
                            .addComponent(newUserInfoL, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(newUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(updateRec)
                                    .addComponent(jLabel2))
                                .addGap(0, 0, 0)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(newDept, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(9, 9, 9)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(newID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)
                                    .addComponent(delRec))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(updateDoneT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ActivateB))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(newUserInfoL1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(newUserUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(addNewUser)
                                            .addComponent(jLabel5))
                                        .addGap(6, 6, 6)
                                        .addComponent(newUserDept, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(newUserPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(newUserPass1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addSucc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents
    private void initComponents2() {
        DB=new UsersDB();
        
        numOfUsersT.setText(DB.NumOfUsers());
        searchDepartment1.add("");
        searchDepartment1.add("Sales");
        searchDepartment1.add("Inventory");
        searchDepartment1.add("Management");
        
        newDept.add("");
        newDept.add("Sales");
        newDept.add("Inventory");
        newDept.add("Management");
        
        newUserDept.add("");
        newUserDept.add("Sales");
        newUserDept.add("Inventory");
        newUserDept.add("Management");
        
        try {
            image =ImageIO.read(new File(this.getClass().getClassLoader()
                    .getResource("").getPath()+"Commons\\UserMgmt.jpg"));
        } catch (IOException ex) {
            Logger.getLogger(LoginPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        g.drawImage(image, 0,0, this);
    }
    private void findUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findUserActionPerformed

        if(searchDepartment1.getSelectedItem().isEmpty()&&searchUsername.getText().isEmpty()&&searchID.getText().isEmpty()){
            setResultTable(0);
        }else setResultTable(searchUsername.getText(),searchDepartment1.getSelectedItem(),searchID.getText());
        
    }//GEN-LAST:event_findUserActionPerformed
    private void searchUsernameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchUsernameKeyReleased
        if (evt.getKeyCode()==KeyEvent.VK_ENTER){
            findUser.doClick();}
        if (evt.getKeyCode()==KeyEvent.VK_QUOTE){
            searchUsername.setText(searchUsername.getText().replaceAll("'", ""));}
    }//GEN-LAST:event_searchUsernameKeyReleased
    private void searchIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchIDKeyReleased
        if (evt.getKeyCode()==KeyEvent.VK_ENTER){
            findUser.doClick();}
        if (evt.getKeyCode()==KeyEvent.VK_QUOTE){
            searchID.setText(searchID.getText().replaceAll("'", ""));}
    }//GEN-LAST:event_searchIDKeyReleased
    private void eFindUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eFindUserActionPerformed
        if(!EUserId.getText().isEmpty())
        {
            User userFound;
            try {
                userFound = DB.eFindUser(EUserId.getText());
                newUsername.setText(userFound.getUsername());
                newDept.select(userFound.getDept());
                newID.setText(userFound.getId());
                UserFoundT.setText("User found!");
                newUsername.requestFocus();
                if(userFound.getActive().equals("FALSE")){
                    updateDoneT.setText("User inactive!");
                    ActivateB.setEnabled(true);
                }else{
                updateDoneT.setText("");
                }
            } catch (SQLException ex) {
                UserFoundT.setText("User not found!");
                newUsername.setText("");
                newDept.select(0);
                newID.setText("");
                updateDoneT.setText("");
            }
        }else {
            newUsername.setText("");
            newDept.select(0);
            newID.setText("");
            updateDoneT.setText("");
            addSucc.setText("");
            UserFoundT.setText("Fill in user ID!");
        }
    }//GEN-LAST:event_eFindUserActionPerformed
    private void delRecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delRecActionPerformed
        if(!newUsername.getText().isEmpty()&&
                !newDept.getSelectedItem().isEmpty()&&
                !newID.getText().isEmpty()){

            int n = JOptionPane.showConfirmDialog(mainframe,"Are you sure you want to deactivate user?"
                    ,"Confimation",JOptionPane.YES_NO_OPTION);
            if(n==0){
                try {
                    DB.delRec(EUserId.getText());
                    updateDoneT.setText("User deactivated!");
                    newUsername.setText("");
                    newDept.select("");
                    newID.setText("");
                    EUserId.setText("");
                    setResultTable();
                    numOfUsersT.setText(DB.NumOfUsers());
                    UserFoundT.setText("");
                } catch (SQLException ex) {
                    Logger.getLogger(UserMgmtP.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }else updateDoneT.setText("Please fill all fields!");
    }//GEN-LAST:event_delRecActionPerformed
    private void updateRecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateRecActionPerformed

        if(!newUsername.getText().isEmpty()&&
                !newDept.getSelectedItem().isEmpty()){
            int n = JOptionPane.showConfirmDialog(mainframe,"Are you sure you want to update user information?"
                    ,"Confimation",JOptionPane.YES_NO_OPTION);
            if(n==0){
                try {
                    DB.updateRec(newUsername.getText(), newDept.getSelectedItem(), EUserId.getText());
                    updateDoneT.setText("User updated!");
                    ArrayList<User> users= DB.usersResult(newUsername.getText(), "", "");
                    newUsername.setText(users.get(0).getUsername());
                    newDept.select(users.get(0).getDept());
                    newID.setText(users.get(0).getId());
                    EUserId.setText(newID.getText());
                    setResultTable(users.get(0).getUsername(),users.get(0).getDept(),users.get(0).getId());

                } catch (SQLException ex) {
                    Logger.getLogger(UserMgmtP.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }else updateDoneT.setText("Please fill all fields!");
    }//GEN-LAST:event_updateRecActionPerformed
    private void EUserIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EUserIdKeyReleased
        if (evt.getKeyCode()==KeyEvent.VK_ENTER){
            eFindUser.doClick();}
        if (evt.getKeyCode()==KeyEvent.VK_QUOTE){
            EUserId.setText(EUserId.getText().replaceAll("'", ""));}
    }//GEN-LAST:event_EUserIdKeyReleased
    private void addNewUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewUserActionPerformed
        if(!newUserUsername.getText().isEmpty()&&
                !newUserDept.getSelectedItem().isEmpty()&&
                !newUserPass.getText().isEmpty()&&
                !newUserPass1.getText().isEmpty()){
            if(newUserPass.getText().equals(newUserPass1.getText())){
                int n = JOptionPane.showConfirmDialog(mainframe,"Add new user?","Confimation",JOptionPane.YES_NO_OPTION);
                if(n==0){
                try {
                    String newUserID = DB.newUserID(newUserDept.getSelectedItem());
                    DB.addNewUser(newUserUsername.getText(), newUserDept.getSelectedItem(), newUserID, newUserPass.getText());
                    JOptionPane.showMessageDialog(mainframe, "New user: '"+newUserUsername.getText()+"' added!");
                    addSucc.setText("");
                    setResultTable(newUserUsername.getText(),newUserDept.getSelectedItem(), newUserID);
                    newUserUsername.setText("");
                    newUserUsername.requestFocus();
                    newUserDept.select("");
                    newUserPass.setText("");
                    newUserPass1.setText("");
                    numOfUsersT.setText(DB.NumOfUsers());
                    searchUsername.setText("");
                    searchID.setText("");
                    searchDepartment1.select(0);

                } catch (SQLException ex) {
                    addSucc.setText("Invalid information!");
                }}
            }else {
                addSucc.setText("New PWs dont match!");
                newUserPass1.setText("");
                newUserPass.setText("");
            }
        }else addSucc.setText("Please fill all fields!");
    }//GEN-LAST:event_addNewUserActionPerformed
    private void viewAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAllActionPerformed
        setResultTable();
        searchUsername.setText("");
        searchID.setText("");
        searchDepartment1.select("");
    }//GEN-LAST:event_viewAllActionPerformed
    private void logoutBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBActionPerformed
        mainframe.frameReset();
        mainframe.setCurrentUser(new User());
        mainframe.getContentPane().add(new LoginPanel(mainframe));
        mainframe.getContentPane().revalidate();
        
    }//GEN-LAST:event_logoutBActionPerformed
    private void backBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBActionPerformed
        mainframe.frameReset();
        mainframe.getContentPane().add(new AccessLevelP(mainframe));
        mainframe.getContentPane().revalidate();
    }//GEN-LAST:event_backBActionPerformed
    private void clearLookupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearLookupActionPerformed
        setResultTable(0);
        searchUsername.setText("");
        searchDepartment1.select("");
        searchID.setText("");
        
    }//GEN-LAST:event_clearLookupActionPerformed
    private void clearUserSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearUserSearchActionPerformed
        EUserId.setText("");
        newDept.select("");
        newID.setText("");
        newUsername.setText("");
        UserFoundT.setText("");
        updateDoneT.setText("");
    }//GEN-LAST:event_clearUserSearchActionPerformed
    private void ActivateBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActivateBActionPerformed
        
        try {
            DB.activateUser(newID.getText());
            updateDoneT.setText("User activated!");
            ActivateB.setEnabled(false);
            viewAll.doClick();
        } catch (SQLException ex) {
            Logger.getLogger(UserMgmtP.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ActivateBActionPerformed

    private void newUsernameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newUsernameKeyReleased
        if (evt.getKeyCode()==KeyEvent.VK_QUOTE){
            newUsername.setText(newUsername.getText().replaceAll("'", ""));}
         if (evt.getKeyCode()==KeyEvent.VK_ENTER){
            updateRec.doClick();}
    }//GEN-LAST:event_newUsernameKeyReleased

    private void newUserUsernameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newUserUsernameKeyReleased
        if (evt.getKeyCode()==KeyEvent.VK_QUOTE){
            newUserUsername.setText(newUserUsername.getText().replaceAll("'", ""));}
    }//GEN-LAST:event_newUserUsernameKeyReleased

    private void newUserPassKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newUserPassKeyReleased
        if (evt.getKeyCode()==KeyEvent.VK_QUOTE){
            newUserPass.setText(newUserPass.getText().replaceAll("'", ""));
            JOptionPane.showMessageDialog(mainframe, "Password cannot contain ( ' )!");
        }
    }//GEN-LAST:event_newUserPassKeyReleased

    private void newUserPass1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newUserPass1KeyReleased
        if (evt.getKeyCode()==KeyEvent.VK_QUOTE){
            newUserPass1.setText(newUserPass1.getText().replaceAll("'", ""));
            JOptionPane.showMessageDialog(mainframe, "Password cannot contain ( ' )!");
        }
        if (evt.getKeyCode()==KeyEvent.VK_ENTER){
            addNewUser.doClick();}
        
    }//GEN-LAST:event_newUserPass1KeyReleased

    private void searchDepartment1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchDepartment1KeyReleased
                if (evt.getKeyCode()==KeyEvent.VK_ENTER){
            findUser.doClick();}
    }//GEN-LAST:event_searchDepartment1KeyReleased

    private void newDeptKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newDeptKeyReleased
         if (evt.getKeyCode()==KeyEvent.VK_ENTER){
            updateRec.doClick();}
    }//GEN-LAST:event_newDeptKeyReleased
    private void setResultTable(){
        
        ArrayList<User> users1= DB.usersResult();
        User users;
        resultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [users1.size()][3],
            new String [] {
                "#", "Username", "Department","ID"
            }
        ) );

        for(int i=0;i<users1.size();i++){
            users=users1.get(i);
            resultTable.setValueAt(i+1, i, 0);
            resultTable.setValueAt(users.getUsername(), i, 1);
            resultTable.setValueAt(users.getDept(), i, 2);
            resultTable.setValueAt(users.getId(), i, 3);
        }
    }
    private void setResultTable(String user,String dep, String id){
        ArrayList<User> users1= DB.usersResult(user, dep, id);
        User users;
        resultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [users1.size()][3],
            new String [] {
                "#", "Username", "Department","ID"
            }
        ) );

        for(int i=0;i<users1.size();i++){
            users=users1.get(i);
            resultTable.setValueAt(i+1, i, 0);
            resultTable.setValueAt(users.getUsername(), i, 1);
            resultTable.setValueAt(users.getDept(), i, 2);
            resultTable.setValueAt(users.getId(), i, 3);
        }
        if(users1.size()<2){
            EUserId.setText(users1.get(0).getId());
            eFindUser.doClick();
            
        }
    }
    private void setResultTable(int x){
        resultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [0][3],
            new String [] {
                "#", "Username", "Department","ID"
            }
        ) );
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ActivateB;
    private javax.swing.JTextField EUserId;
    private javax.swing.JTextField UserFoundT;
    private javax.swing.JButton addNewUser;
    private javax.swing.JTextField addSucc;
    private javax.swing.JButton backB;
    private javax.swing.JButton clearLookup;
    private javax.swing.JButton clearUserSearch;
    private javax.swing.JButton delRec;
    private javax.swing.JButton eFindUser;
    private javax.swing.JLabel editUserIdL;
    private javax.swing.JButton findUser;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logoutB;
    private javax.swing.JLabel lookUpDepartment;
    private javax.swing.JLabel lookUpUsername;
    private javax.swing.JLabel lookUpUsers;
    private javax.swing.JLabel lookUpUsers1;
    private java.awt.Choice newDept;
    private javax.swing.JTextField newID;
    private java.awt.Choice newUserDept;
    private javax.swing.JLabel newUserInfoL;
    private javax.swing.JLabel newUserInfoL1;
    private javax.swing.JPasswordField newUserPass;
    private javax.swing.JPasswordField newUserPass1;
    private javax.swing.JTextField newUserUsername;
    private javax.swing.JTextField newUsername;
    private javax.swing.JLabel numOfUsers;
    private javax.swing.JTextField numOfUsersT;
    private javax.swing.JTable resultTable;
    private java.awt.Choice searchDepartment1;
    private javax.swing.JTextField searchID;
    private javax.swing.JTextField searchUsername;
    private javax.swing.JTextField updateDoneT;
    private javax.swing.JButton updateRec;
    private javax.swing.JButton viewAll;
    // End of variables declaration//GEN-END:variables
    private final  MainFrame mainframe;
    private UsersDB DB;
    private BufferedImage image;
}
